// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-calendar-api/internal/repo (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozoncp/ocp-calendar-api/app/models"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AddCalendars mocks base method.
func (m *MockRepo) AddCalendars(arg0 []models.Calendar) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCalendars", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCalendars indicates an expected call of AddCalendars.
func (mr *MockRepoMockRecorder) AddCalendars(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCalendars", reflect.TypeOf((*MockRepo)(nil).AddCalendars), arg0)
}

// DescribeCalendar mocks base method.
func (m *MockRepo) DescribeCalendar(arg0 uint64) (models.Calendar, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCalendar", arg0)
	ret0, _ := ret[0].(models.Calendar)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCalendar indicates an expected call of DescribeCalendar.
func (mr *MockRepoMockRecorder) DescribeCalendar(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCalendar", reflect.TypeOf((*MockRepo)(nil).DescribeCalendar), arg0)
}

// ListCalendars mocks base method.
func (m *MockRepo) ListCalendars(arg0, arg1 uint64) ([]models.Calendar, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCalendars", arg0, arg1)
	ret0, _ := ret[0].([]models.Calendar)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCalendars indicates an expected call of ListCalendars.
func (mr *MockRepoMockRecorder) ListCalendars(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCalendars", reflect.TypeOf((*MockRepo)(nil).ListCalendars), arg0, arg1)
}
